plugins {
    alias(libs.plugins.kotlin)
    alias(libs.plugins.kotlin.spring)
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dependency.management)
    alias(libs.plugins.openapi.generator)
}
repositories {
    mavenCentral()
}
dependencies {
    /* modules */
    implementation project(':application:domain')

    /* kotlin */
    implementation(libs.kotlin)
    implementation(libs.kotlin.logging)
    implementation(libs.jackson.module.kotlin)

    /* spring */
    implementation(libs.spring.boot.starter)

    /* feign */
    implementation(libs.feign.core)
    implementation(libs.feign.form)
    implementation(libs.feign.okhttp)
    implementation(libs.feign.slf4j)
    implementation(libs.feign.jackson)
    implementation(libs.jackson.datatype.jsr310)

    /* testing */
    testImplementation(libs.jupiter)
    testImplementation(libs.kotest)
    testImplementation(libs.wiremock)
}
openApiGenerate {
//    https://openapi-generator.tech/docs/generators/java/
    generatorName = "java" // Use the Java generator
//    inputSpec = "$rootDir/application/properties/src/main/resources/open-api-specs2/product-nutrition-v1.yaml"
    inputSpec = "$projectDir/src/main/resources/open-api-specs/product-nutrition-v1.yaml" // Path to the YAML file
    outputDir = "$buildDir/generated" // Output directory for generated code
    apiPackage = "com.example.infrastructure.client.productnutrition.api" // Package for API interfaces
    modelPackage = "com.example.infrastructure.client.productnutrition.models" // Package for models
    invokerPackage = "com.example.infrastructure.client.productnutrition.invoker" // Package for invoker classes

    configOptions = [
            generateConstructorWithAllArgs: "true", // Generate constructors with all arguments
            generateBuilders              : "true", // Generate builder classes
            useJakartaEe                  : "true", // Use Jakarta EE annotations
            openApiNullable               : "false", // Don't use OpenAPI nullable
            library                       : "feign", // Use Feign client
            documentationProvider         : "none", // Don't generate documentation
            useTags                       : "true" // Separate files by tags (optional)
    ]
}
compileKotlin {
    dependsOn "openApiGenerate"
}
sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/src/main/java"
        }
    }
}
tasks.named('bootJar').configure {
    enabled = false
}
tasks.test {
    useJUnitPlatform()
    failFast = true
}