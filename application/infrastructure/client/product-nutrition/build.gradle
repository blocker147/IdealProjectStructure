import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    alias(libs.plugins.kotlin)
    alias(libs.plugins.kotlin.spring)
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dependency.management)
    alias(libs.plugins.openapi.generator)
    alias(libs.plugins.kapt)
}
repositories {
    mavenCentral()
}
dependencies {
    /* modules */
    implementation project(':application:domain')

    /* kotlin */
    implementation(libs.kotlin)
    implementation(libs.kotlin.logging)
    implementation(libs.jackson.module.kotlin)

    /* spring */
    implementation(libs.spring.boot.starter)
    implementation(libs.spring.boot.starter.web)
    implementation(libs.mapstruct)
    kapt(libs.mapstruct.processor)

    /* testing */
    testImplementation(libs.jupiter)
    testImplementation(libs.kotest)
    testImplementation(libs.wiremock)
}
tasks.register('getProductNutritionByIdSpec', GenerateTask) {
    generatorName = "kotlin"
    inputSpec = "$projectDir/src/main/resources/open-api-specs/get-product-nutrition-by-id-v2.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "com.example.infrastructure.client.productnutrition.v1.api"
    modelPackage = "com.example.infrastructure.client.productnutrition.v1.models"
    invokerPackage = "com.example.infrastructure.client.productnutrition.v1.invoker"
    configOptions = [
            library                       : "jvm-spring-restclient",
            serializationLibrary          : "jackson",
            useSpringBoot3                : "true",
    ]
}
tasks.configureEach {
    if (name == "kaptGenerateStubsKotlin") {
        mustRunAfter(tasks.getProductNutritionByIdSpec)
    }
}
compileKotlin {
    dependsOn "getProductNutritionByIdSpec"
}
sourceSets {
    main {
        kotlin {
            srcDirs += "$buildDir/generated/src/main/kotlin"
        }
    }
}
tasks.named('bootJar').configure {
    enabled = false
}
tasks.test {
    useJUnitPlatform()
    failFast = true
}