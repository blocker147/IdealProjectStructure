import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    alias(libs.plugins.kotlin)
    alias(libs.plugins.kotlin.spring)
    alias(libs.plugins.spring.boot)
    alias(libs.plugins.spring.dependency.management)
    alias(libs.plugins.openapi.generator)
}
repositories {
    mavenCentral()
}
dependencies {
    /* modules */
    implementation project(':application:domain')

    /* kotlin */
    implementation(libs.kotlin)
    implementation(libs.kotlin.logging)
    implementation(libs.jackson.module.kotlin)

    /* spring */
    implementation(libs.spring.boot.starter.web)
    implementation(libs.springdoc.openapi.ui)

    /* testing */
    testImplementation(libs.jupiter)
    testImplementation(libs.kotest)
    testImplementation(libs.mockk)
    testImplementation(libs.spring.boot.starter.test)
}
tasks.register('generateProductsSpec', GenerateTask) {
    generatorName = "kotlin-spring"
    inputSpec = "$projectDir/src/main/resources/open-api-specs/products-v1.yaml"
    outputDir = "$buildDir/generated"
    apiPackage = "com.example.features.products.api"
    modelPackage = "com.example.features.products.models"

    configOptions = [
            useJakartaEe               : "true",
            hideGenerationTimestamp    : "true",
            documentationProvider      : "springdoc",
            openApiNullable            : "false",
            library                    : "spring-cloud",
            useBeanValidation          : "false",
            interfaceOnly              : "true",
            exceptionHandler           : "false",
            useTags                    : "true",
    ]
    doLast {
        delete("${buildDir}/generated/src/main/kotlin/org")
        delete("${buildDir}/generated/src/main/kotlin/com/example/features/products/api/ProductsApiClient.kt")
    }
}
compileKotlin {
    dependsOn "generateProductsSpec"
}
sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/src/main/kotlin"
        }
    }
}
tasks.named('bootJar').configure {
    enabled = false
}
tasks.test {
    useJUnitPlatform()
    failFast = true
}